ARG BASE_IMAGE="ghcr.io/kas-lab/kasm-jammy:latest"
FROM $BASE_IMAGE

USER root


### Envrionment config
ENV DEBIAN_FRONTEND noninteractive

###Add Sudo
RUN add-apt-repository ppa:kisak/kisak-mesa \
    && apt update \
    && apt install -y \
    sudo \
    tzdata\
    vim \
    wget \
    curl \
    lsb-release \
    gnupg \
    wmctrl \
    git \
    software-properties-common \
    mesa-utils \
    bash-completion \
    python3-pip \
    && apt full-upgrade -y \
    && rm -rf /var/lib/apt/list/


# Set the locale
RUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && \
    locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
### Install Visual Studio Code
# COPY ./docker/src/ubuntu/install/vs_code $INST_SCRIPTS/vs_code/
# RUN bash $INST_SCRIPTS/vs_code/install_vs_code.sh  && rm -rf $INST_SCRIPTS/vs_code/

### Install Gazebo
RUN wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null

RUN apt update && apt install -y \
  gz-garden \
	&& rm -rf /var/lib/apt/lists/

RUN pip uninstall empy && pip install empy==3.3.4 && pip install -U colcon-common-extensions

### Install ROS2
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt update && apt install -y \
  ros-humble-ros-base \
  python3-empy=3.3.4-2 \
  # python3-colcon-common-extensions \
  python3-rosdep \
  python3-vcstool \
  && rm -rf /var/lib/apt/lists/


###Add the USER env var
RUN echo 'kasm-user ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
ENV HOME /home/kasm-user
USER kasm-user
ENV DEBIAN_FRONTEND noninteractive

WORKDIR $HOME

# Install ArduSub
RUN git clone https://github.com/ArduPilot/ardupilot.git
WORKDIR $HOME/ardupilot
RUN git checkout ab597cb
RUN git submodule update --init --recursive
RUN rm $HOME/ardupilot/Tools/environment_install/install-prereqs-ubuntu.sh
RUN wget -P $HOME/ardupilot/Tools/environment_install/ https://raw.githubusercontent.com/ArduPilot/ardupilot/c623ae8b82db4d7e195f4b757e2ae5d049f941e5/Tools/environment_install/install-prereqs-ubuntu.sh
RUN chmod +x $HOME/ardupilot/Tools/environment_install/install-prereqs-ubuntu.sh
RUN USER=kasm-user Tools/environment_install/install-prereqs-ubuntu.sh -y

RUN sudo pip3 install -U mavproxy PyYAML

ENV PATH=/opt/gcc-arm-none-eabi-10-2020-q4-major/bin:$PATH
ENV PATH=$PATH:$HOME/ardupilot/Tools/autotest
ENV PATH=/usr/lib/ccache:$PATH

RUN ["/bin/bash","-c","./waf configure && make sub"]

# install ardupilot gazebo plugin
RUN sudo apt update && sudo apt install -y \
    rapidjson-dev \
    libgz-sim7-dev \
    && sudo rm -rf /var/lib/apt/list/

WORKDIR $HOME
RUN git clone https://github.com/ArduPilot/ardupilot_gazebo

WORKDIR $HOME/ardupilot_gazebo
RUN [ "/bin/bash","-c","mkdir build && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo\
    && make"]

ENV GZ_SIM_SYSTEM_PLUGIN_PATH=$HOME/ardupilot_gazebo/build:${GZ_SIM_SYSTEM_PLUGIN_PATH}
ENV GZ_SIM_RESOURCE_PATH=$HOME/ardupilot_gazebo/models:$HOME/ardupilot_gazebo/worlds:${GZ_SIM_RESOURCE_PATH}

# Copy suave files
ENV GZ_VERSION="garden"
RUN mkdir -p $HOME/suave_ws/src
COPY --chown=kasm-user:kasm-user suave.rosinstall $HOME/suave_ws/suave.rosinstall
WORKDIR $HOME/suave_ws/
RUN vcs import src < suave.rosinstall --recursive

RUN rm -rf $HOME/suave_ws/src/suave/
COPY --chown=kasm-user:kasm-user suave/ $HOME/suave_ws/src/suave/suave/
COPY --chown=kasm-user:kasm-user suave_managing/ $HOME/suave_ws/src/suave/suave_managing/
COPY --chown=kasm-user:kasm-user suave_metrics/ $HOME/suave_ws/src/suave/suave_metrics/
COPY --chown=kasm-user:kasm-user suave_missions/ $HOME/suave_ws/src/suave/suave_missions/
COPY --chown=kasm-user:kasm-user suave_msgs/ $HOME/suave_ws/src/suave/suave_msgs/

# Install suave deps
WORKDIR $HOME/suave_ws
RUN ["/bin/bash", "-c", "source /opt/ros/humble/setup.bash \
    && sudo rosdep init \
    && rosdep update \
    && rosdep install --from-paths src --ignore-src -r -y"]

RUN ["/bin/bash", "-c", "sudo ./src/mavros/mavros/scripts/install_geographiclib_datasets.sh"]

RUN pip uninstall empy -y && pip install empy==3.3.4

# Build suave
RUN ["/bin/bash", "-c", "source /opt/ros/humble/setup.bash \
    && colcon build --symlink-install \
    && echo 'source ~/suave_ws/install/setup.bash' >> ~/.bashrc"]


RUN sudo apt autoremove -y && sudo rm -rf /var/lib/apt/lists/

COPY --chown=kasm-user:kasm-user runner/ $HOME/suave_ws/src/suave/runner/

WORKDIR $HOME/suave_ws/src/suave/runner/

CMD ["--tail-log"]
